AWSTemplateFormatVersion: '2010-09-09'
Description: Simple EC2 instance for use testing VPCs
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-05d21345c5ec60911
  LatestAmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-079498e9591d4b793
Resources:
  ## IAM Role for EC2 to use SSM ##
  EC2SSMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
       - !Ref EC2SSMRole
  MyEC2Instance: 
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      # SubnetId: !Ref SubnetId
      IamInstanceProfile: !Ref EC2InstanceProfile
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeviceIndex: 0
        SubnetId: !Ref SubnetId
        GroupSet:
          - !Ref SG
      # SecurityGroupIds:
      #   - !GetAtt SG.GroupId
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl enable httpd
          systemctl start httpd
          echo "Hello from $(hostname -f)" > /var/www/html/index.html
      Tags:
        - Key: Name
          Value: EC2-SSM-Instance  
  SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0